---
- hosts: all
  become: true
  user: vagrant

  #we will gather facts later after ensuring python is installed
  gather_facts: False

  #Ubuntu 16.04 doesnt come with python 2.7 which ansible uses. 
  #so we will use a raw command to install it before we gather_facts
  pre_tasks:
    - name: install python 2
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
    - setup: #get the gather_facts

  tasks:
    - name: update apt cache
      apt: update_cache=yes
    - name: Install php
      apt: name={{item}} state=present
      with_items:
        - mysql-server
        - python-mysqldb
        - nginx
        - php7.0
        - php7.0-fpm
        - php7.0-mbstring
        - php7.0-mysql
        - php7.0-xml
        - php7.0-zip
        - redis-server
        - golang-go
        - npm
        - composer

    #Clone PHP Application Repo
    - name: Clone PHP Repo
      git:
        repo: https://github.com/gitBC/kochava-php.git
        dest: /var/www
        update: yes

    #Clone Go Application Repo
    - name: Clone GO Repo
      git:
        repo: https://github.com/gitBC/kochava-go.git
        dest: /usr/share/go/src/kochava-go
        update: yes

    ##Set NGINX Config
    - name: Copy template Nginx Site config into place
      template: 
        src=templates/nginx.conf.j2
        dest=/etc/nginx/sites-available/koc.app
    - name: enable the site in nginx
      file:
        src=/etc/nginx/sites-available/koc.app
        dest=/etc/nginx/sites-enabled/koc.app
        state=link
    - name: restart nginx to ensure site conf found
      service: name=nginx state=restarted

    ##install composer dependenices
    - name: "Install composer depenedencies in PHP application"
      composer: command=install working_dir=/var/www

    ##Set REDIS Config
    - name: Copy template REDIS Site config into place
      template: 
        src=templates/redis.conf.j2
        dest=/etc/redis/redis.conf
    - name: restart Redis to ensure new conf found
      service: name=redis-server state=restarted

    ##Set PHP .env Config
    - name: Copy template PHP.env Site config into place
      copy: 
        src=templates/.env.php.j2
        dest=/var/www/.env

    #Set log directory to writable, horriably
    - name: Give shitty 777 permissions to logs
      file:
        path: "/var/www/storage/logs/lumen.log"
        state: file
        mode: 0777
    - name: "Give shitty 777 permissions to logs2"
      file: 
        path: "/var/www/storage/logs"
        mode: 0777
        recurse: no

    - name: Add Mysql Database to server
      mysql_db:
        name: homestead 
        state: present

    - name: Add MYSQL user
      mysql_user:
        name: homestead
        password: secret
        priv: '*.*:ALL'
        state: present
      
    #Run Artisan to migrate database
    - name: Run Artisan to migrate database
      raw: "php /var/www/artisan migrate --force"

    # #install composer
    # - name: Install Composer and move to bin with name composer
    #   raw: "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\""
    #   raw: "php composer-setup.php --install-dir=bin --filename=composer"
    #   raw: "php -r \"unlink('composer-setup.php');\""